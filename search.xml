<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ABC230G - GCD Permutation</title>
    <url>/2022/01/07/ABC230G/</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc230/tasks/abc230_g">题目链接</a></p>
<p>给定$1\sim n$的排列$p_1,\cdots,p_n$,求$\sum\limits_{i=1}^n\sum\limits_{j=i}^n[\gcd(i,j)\neq1]\cdot[\gcd(p_i,p_j)\neq1].(n\leq2\times10^5)$</p>
<span id="more"></span>
<p>第一个$\gcd$直接上套路，容斥枚举因数:</p>
<p>$\sum\limits_{i=1}^n\sum\limits_{j=i}^n\sum\limits_{d=2}^n[\gcd(i,j)==d]\cdot[\gcd(p_i,p_j)\neq1]=\sum\limits_{d=2}^n\mu(d)\sum\limits_{i=1}^{\lfloor \frac{n}{d}\rfloor}\sum\limits_{j=i}^{\lfloor \frac{n}{d}\rfloor}\cdot[\gcd(p_{id},p_{jd})\neq1].$</p>
<p>对于某个$d$,当$\mu(d)$不为0的时候才会对答案有贡献，此时考虑$1\sim n$内所有$d$的倍数构成的集合$p_{kd}$.计算其$\gcd$不为1的对数，可以再来一波莫比乌斯反演，枚举集合中的因数$x$：</p>
<p>$\sum\limits_{i=1}^{\lfloor \frac{n}{d}\rfloor}\sum\limits_{j=i}^{\lfloor \frac{n}{d}\rfloor}[\gcd(p_{id},p_{jd})\neq1]=\sum\limits_{x=2}^{200000}\mu(x)\sum\limits_{i=1}^{\lfloor \frac{n}{d}\rfloor}\sum\limits_{j=i}^{\lfloor \frac{n}{d}\rfloor}[x|p_{id}][x|p_{jd}]$.</p>
<p>上式第二项即拿出来的集合中，含有因子$x$的所有$p$之间的对的个数。可以开一个map来存当前集合中含有因数$x$的$p$的个数，记为$cnt$,则对的个数为$\frac{cnt(cnt+1)}{2}$.</p>
<p>总复杂度计算：当$\mu(d)\neq0$时，$d$质因数分解后幂次最多取1，而1到200000内$2\times3\times5\times7\times11\times13\times17=510510&gt;200000,$说明质因数分解最多只能有6个质因子。这样的数的个数最多有$2^6-1$.而其中$d=1$时集合大小最大，为$1\sim n$,其因子总数为$\sum\limits_{i=1}^n\frac{n}{i}\approx n\ln n.$</p>
<p>总复杂度为$O(63n\ln n),$实际常数偏小，可以通过。</p>
<p>AC代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200010</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pa pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mapa make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sit std::set<span class="meta-string">&lt;std::pair&lt;int,int&gt;</span> &gt;::iterator</span></span><br><span class="line"><span class="keyword">int</span> a[MAXN], mu[MAXN], pri[MAXN], vis[MAXN], tot, n;</span><br><span class="line"> vector&lt;<span class="keyword">int</span>&gt;d[MAXN], tmp;</span><br><span class="line">map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])</span><br><span class="line">            mu[i] = <span class="number">-1</span>, pri[++tot] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= tot &amp;&amp; i * pri[j] &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[i * pri[j]] = <span class="number">1</span>; <span class="comment">//minf[i * pri[j]] = pri[j];</span></span><br><span class="line">            <span class="keyword">if</span> (i % pri[j] == <span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> mu[i * pri[j]] = -mu[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mu[i])</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= n; j += i)d[j].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//题解里说的2*3*5*7*11*13*17是因为mu[b]!=0所以分解之后次幂最多取1.</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mp.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x; i &lt;= n; i += x)<span class="comment">//固定x,p的因数统统扔进map</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> it : d[a[i]])</span><br><span class="line">        &#123;</span><br><span class="line">            mp[it]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it : mp)</span><br><span class="line">    &#123;</span><br><span class="line">        res += <span class="number">1LL</span> * mu[it.first] * it.second * (it.second + <span class="number">1</span>) / <span class="number">2</span>;<span class="comment">//再反演</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slv</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n); <span class="built_in">init</span>(n+<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)<span class="comment">//枚举外层因数i</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mu[i])</span><br><span class="line">        ans += <span class="number">1LL</span>*mu[i] * <span class="built_in">calc</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> _ = <span class="number">1</span>; <span class="comment">///scanf(&quot;%d&quot;, &amp;_);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LOCAL</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;in.in&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">&quot;out.out&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= _; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">slv</span>();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);<span class="comment">//fflush(stdout);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数论</category>
      </categories>
      <tags>
        <tag>莫比乌斯反演</tag>
      </tags>
  </entry>
</search>
